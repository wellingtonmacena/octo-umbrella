#See https://aka.ms/containerfastmode to understand how Visual Studio uses this Dockerfile to build your images for faster debugging.

#Depending on the operating system of the host machines(s) that will build or run the containers, the image specified in the FROM statement may need to be changed.
#For more information, please see https://aka.ms/containercompat

FROM mcr.microsoft.com/dotnet/aspnet:6.0 AS base
WORKDIR /app
EXPOSE 80
EXPOSE 443

FROM mcr.microsoft.com/dotnet/sdk:6.0 AS build
WORKDIR /src
COPY . .
RUN dotnet restore 
RUN dotnet build --no-restore -c Release -o /app

FROM build AS publish
RUN dotnet publish --no-restore -c Release -o /app


FROM base AS final
WORKDIR /app
COPY --from=publish /app .
#ENTRYPOINT ["dotnet", "Octo-Umbrella-API.dll"]
CMD ASPNETCORE_URLS=http://*:$PORT dotnet Octo-Umbrella-API.dll

#docker build -t octo-umbrella-api .
#heroku container:push web -a octo-umbrella-api
#heroku container:release web -a octo-umbrella-api
#https://www.treinaweb.com.br/blog/publicando-uma-aplicacao-asp-net-core-no-heroku